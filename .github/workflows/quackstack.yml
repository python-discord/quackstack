name: Build & Deploy Quackstack

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Python Dependencies
        uses: HassanAbouelela/actions/setup-python@setup-python_v1.3.1
        with:
          # Set dev=true to install flake8 extensions, which are dev dependencies
          dev: true
          python_version: '3.10'

      # We will not run `flake8` here, as we will use a separate flake8
      # action. As pre-commit does not support user installs, we set
      # PIP_USER=0 to not do a user install.
      - name: Run pre-commit hooks
        run: export PIP_USER=0; SKIP=flake8 pre-commit run --all-files

      # Run flake8 and have it format the linting errors in the format of
      # the GitHub Workflow command to register error annotations. This
      # means that our flake8 output is automatically added as an error
      # annotation to both the run result and in the "Files" tab of a
      # pull request.
      #
      # Format used:
      # ::error file={filename},line={line},col={col}::{message}
      - name: Run flake8
        run: "flake8 \
        --format='::error file=%(path)s,line=%(row)d,col=%(col)d::[flake8] %(code)s: %(text)s'"

  build:
    name: Build & Push Docker image
    runs-on: ubuntu-latest

    needs: [lint]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Create SHA Container Tag
        id: sha_tag
        run: |
          tag=$(cut -c 1-7 <<< $GITHUB_SHA)
          echo "::set-output name=tag::$tag"
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN  }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          cache-from: type=registry,ref=ghcr.io/python-discord/quackstack:main
          cache-to: type=inline
          tags: |
            ghcr.io/python-discord/quackstack:main
            ghcr.io/python-discord/quackstack:${{ steps.sha_tag.outputs.tag }}

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest

    needs: [build]

    steps:
      - name: Create SHA Container Tag
        id: sha_tag
        run: |
          tag=$(cut -c 1-7 <<< $GITHUB_SHA)
          echo "::set-output name=tag::$tag"

      # Check out the private Kubernetes repository for the
      # deployment.yaml file using a GitHub Personal Access
      # Token to get access.
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          repository: python-discord/kubernetes

      - name: Authenticate with Kubernetes
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - name: Deploy to Kubernetes
        uses: Azure/k8s-deploy@v1
        with:
          manifests: |
              namespaces/default/quackstack/deployment.yaml
          images: 'ghcr.io/python-discord/quackstack:${{ steps.sha_tag.outputs.tag }}'
          kubectl-version: 'latest'
